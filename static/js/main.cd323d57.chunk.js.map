{"version":3,"sources":["components/Display.js","components/DrumPad.js","components/Volume.js","soundData/soundBank.js","components/PadBank.js","components/PowerButton.js","components/Footer.js","containers/DrumMachine.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","power","id","soundLabel","volume","className","DrumPad","audioEl","useRef","buttonEl","ref","onClick","e","sound","current","currentTime","playPromise","play","undefined","then","_","catch","error","console","log","updateDisplay","target","button","classList","toggle","setTimeout","disabled","autoComplete","padLabel","src","url","Volume","Slider","value","onChange","handleChange","soundBank","PadBank","useState","setSoundLabel","setVolume","map","soundData","PowerButton","type","powerSwitch","htmlFor","Footer","href","rel","DrumMachine","useEffect","window","addEventListener","handleKeydown","removeEventListener","clicked","find","key","toUpperCase","document","getElementById","click","setPower","tabIndex","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gOAAe,SAASA,EAAQC,GAE5B,OAAOA,EAAMC,MACT,sBAAKC,GAAG,UAAR,UACI,yCACA,yCAAYF,EAAMG,cAClB,sCAASH,EAAMI,aAGnB,sBAAKF,GAAG,UAAR,UACI,sBACA,mBAAGG,UAAU,MAAb,0BACA,yBCVG,SAASC,EAAQN,GAG5B,IAAMO,EAAUC,iBAAO,MAEjBC,EAAWD,iBAAO,MAwBxB,OACI,yBAAQN,GAAIF,EAAME,GACVG,UAAWL,EAAMC,MAAQ,WAAa,eACtCS,IAAKD,EACLE,QA1BQ,SAASC,GAGzB,IAAMC,EAAQN,EAAQO,QAEtBD,EAAMT,OAAwB,IAAfJ,EAAMI,OACrBS,EAAME,YAAc,EACpB,IAAIC,EAAcH,EAAMI,YACJC,IAAhBF,GACAA,EAAYG,MAAK,SAAAC,OACZC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIxBtB,EAAMyB,cAAcb,EAAEc,OAAOxB,IAE7B,IAAMyB,EAASlB,EAASK,QACxBa,EAAOC,UAAUC,OAAO,SACxBC,YAAW,kBAAMH,EAAOC,UAAUC,OAAO,WAAU,KAQ3CE,UAAW/B,EAAMC,MACjB+B,aAAa,MALrB,UAMKhC,EAAMiC,SACP,uBAAO/B,GAAIF,EAAMiC,SACV5B,UAAU,OACVK,IAAKH,EACL2B,IAAKlC,EAAMmC,S,8CCtCf,SAASC,EAAOpC,GAE3B,OACI,qCACI,sBAAKE,GAAG,aAAR,UACI,cAAC,IAAD,CAAgBG,UAAWL,EAAMC,MAAQ,KAAO,QAChD,cAACoC,EAAA,EAAD,CACIC,MAAOtC,EAAMI,OACbmC,SAAUvC,EAAMwC,aAChBT,UAAW/B,EAAMC,MACjBI,UAAWL,EAAMC,MAAQ,KAAO,QAEpC,cAAC,IAAD,CAAcI,UAAWL,EAAMC,MAAQ,KAAO,WAElD,uCClBZ,IAgDewC,EAhDG,CACd,CACIR,SAAU,IACV/B,GAAI,UACJiC,IAAK,uBAET,CACIF,SAAU,IACV/B,GAAI,UACJiC,IAAK,uBAET,CACIF,SAAU,IACV/B,GAAI,UACJiC,IAAK,uBAET,CACIF,SAAU,IACV/B,GAAI,gBACJiC,IAAK,6BAET,CACIF,SAAU,IACV/B,GAAI,cACJiC,IAAK,0BAET,CACIF,SAAU,IACV/B,GAAI,UACJiC,IAAK,uBAET,CACIF,SAAU,IACV/B,GAAI,WACJiC,IAAK,wBAET,CACIF,SAAU,IACV/B,GAAI,cACJiC,IAAK,2BAET,CACIF,SAAU,IACV/B,GAAI,cACJiC,IAAK,4BCOEO,MA1Cf,SAAiB1C,GAEb,MAAoC2C,mBAAS,IAA7C,mBAAOxC,EAAP,KAAmByC,EAAnB,KACMnB,EAAgB,SAAUb,GAC5BgC,EAAchC,IAGlB,EAA4B+B,mBAAS,IAArC,mBAAOvC,EAAP,KAAeyC,EAAf,KAKA,OACI,sBAAK3C,GAAG,UAAR,UACI,cAACH,EAAD,CAASI,WAAYA,EACjBC,OAAQA,EACRH,MAAOD,EAAMC,QAGjB,qBAAKC,GAAG,UAAR,SACKuC,EAAUK,KAAI,SAACC,GACZ,OACI,cAACzC,EAAD,CACImB,cAAeA,EACfQ,SAAUc,EAAUd,SACpB7B,OAAQA,EACRH,MAAOD,EAAMC,MACbC,GAAI6C,EAAU7C,GAEdiC,IAAKY,EAAUZ,KADVY,EAAU7C,SAM/B,cAACkC,EAAD,CAAQhC,OAAQA,EACZoC,aA3BS,SAAU5B,EAAG0B,GAC9BO,EAAUP,IA2BFrC,MAAOD,EAAMC,YC7Cd,SAAS+C,EAAYhD,GAEhC,OACI,sBAAKK,UAAU,eAAf,UACI,uBAAO4C,KAAK,SACL/C,GAAG,QACHS,QAASX,EAAMkD,cAEtB,uBAAOC,QAAQ,QAAf,sBCRG,SAASC,IACpB,OACI,iCACI,uDAAyB,mBAAGC,KAAK,iDAC7B3B,OAAO,SAAS4B,IAAI,aADC,8BAAzB,6BCIG,SAASC,IAEpBC,qBAAU,WAGN,OAFAC,OAAOC,iBAAiB,UAAWC,GAE5B,kBAAMF,OAAOG,oBAAoB,UAAWD,MACpD,IAGH,IAAMA,EAAgB,SAAS/C,GAC3B,IAAIiD,EAAUpB,EAAUqB,MAAK,SAACf,GAC1B,OAAOA,EAAUd,WAAarB,EAAEmD,IAAIC,sBAE5B9C,IAAZ2C,GAAyBI,SAASC,eAAeL,EAAQ3D,IAAIiE,SAGjE,EAA4BxB,oBAAS,GAArC,mBAAQ1C,EAAR,KAAemE,EAAf,KAMA,OACI,sBAAKlE,GAAG,eAAemE,SAAS,KAAhC,UACI,8CACA,cAAC,EAAD,CAAUpE,MAAOA,IACjB,cAAC+C,EAAD,CAAa/C,MAAOA,EAAOiD,YATf,SAAStC,GACzBwD,GAAUnE,GACVW,EAAEc,OAAOE,UAAUC,OAAO,UAQtB,cAACuB,EAAD,O,MC/BG,SAASkB,IACtB,OACE,qBAAKjE,UAAU,MAAf,SACE,cAACkD,EAAD,MCNN,IAYegB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.cd323d57.chunk.js","sourcesContent":["export default function Display(props) {\n\n    return props.power ? (\n        <div id=\"display\">\n            <p>kit: 909</p>\n            <p>sample: {props.soundLabel}</p>\n            <p>vol: {props.volume}</p>\n        </div>\n    ) : (\n        <div id=\"display\">\n            <p></p>\n            <p className=\"off\">see you! : &#41;</p>\n            <p></p>\n        </div>\n    )\n}","import { useRef } from 'react';\n\nexport default function DrumPad(props) {\n\n    // create a reference for the audio element\n    const audioEl = useRef(null);\n    // create a reference for the button element\n    const buttonEl = useRef(null);\n\n    const handleClick = function(e) {\n        // play sound (and prevent promise errors when running\n        // FCC test suite in Chrome):\n        const sound = audioEl.current;\n        // <audio /> volume range is 0. - 1.\n        sound.volume = props.volume * 0.01;\n        sound.currentTime = 0;\n        let playPromise = sound.play();\n        if (playPromise !== undefined) {\n            playPromise.then(_ => { })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n        // update display and flashes pads\n        props.updateDisplay(e.target.id);\n        // lightning button on keypresses by rapidly toggling CSS classes\n        const button = buttonEl.current;\n        button.classList.toggle('press');\n        setTimeout(() => button.classList.toggle('press'), 75);\n    }\n\n    return (\n        <button id={props.id} \n                className={props.power ? \"drum-pad\" : \"drum-pad off\"} \n                ref={buttonEl} \n                onClick={handleClick} \n                disabled={!props.power} \n                autoComplete=\"off\" >\n            {props.padLabel}\n            <audio id={props.padLabel} \n                   className=\"clip\" \n                   ref={audioEl} \n                   src={props.url}>\n            </audio>\n        </button>\n    )\n}","import Slider from '@material-ui/core/Slider';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\n\nexport default function Volume(props) {\n\n    return (\n        <>\n            <div id=\"volume-div\">\n                <VolumeDownIcon className={props.power ? \"on\" : \"off\"} />\n                <Slider\n                    value={props.volume}\n                    onChange={props.handleChange}\n                    disabled={!props.power}\n                    className={props.power ? \"on\" : \"off\"}\n                />\n                <VolumeUpIcon className={props.power ? \"on\" : \"off\"} />\n            </div>\n            <p>vol</p>\n        </>\n    )\n}\n","const soundBank = [\n    {\n        padLabel: \"Q\",\n        id: \"chord 1\",\n        url: \"./sound/Chord 1.mp3\"\n    },\n    {\n        padLabel: \"W\",\n        id: \"chord 2\",\n        url: \"./sound/Chord 2.mp3\"\n    },\n    {\n        padLabel: \"E\",\n        id: \"chord 3\",\n        url: \"./sound/Chord 3.mp3\"\n    },\n    {\n        padLabel: \"A\",\n        id: \"closed HH 909\",\n        url: \"./sound/Closed HH 909.mp3\"\n    },\n    {\n        padLabel: \"S\",\n        id: \"open HH 909\",\n        url: \"./sound/OpenHH 909.mp3\"\n    },\n    {\n        padLabel: \"D\",\n        id: \"rimshot\",\n        url: \"./sound/Rimshot.mp3\"\n    },\n    {\n        padLabel: \"Z\",\n        id: \"kick 909\",\n        url: \"./sound/Kick 909.mp3\"\n    },\n    {\n        padLabel: \"X\",\n        id: \"snare 909-1\",\n        url: \"./sound/Snare 909_1.mp3\"\n    },\n    {\n        padLabel: \"C\",\n        id: \"snare 909-2\",\n        url: \"./sound/Snare 909_2.mp3\"\n    }\n]\n\nexport default soundBank;","import { useState } from 'react';\n\nimport Display from './Display';\nimport DrumPad from './DrumPad';\nimport Volume from '../components/Volume';\nimport soundBank from '../soundData/soundBank';\n\n\n// PadBank creates a DrumPad for each object in soundBank array\nfunction PadBank(props) {\n\n    const [soundLabel, setSoundLabel] = useState(\"\");\n    const updateDisplay = function (e) {\n        setSoundLabel(e);\n    }\n\n    const [volume, setVolume] = useState(40);\n    const handleChange = function (e, value) {\n        setVolume(value);\n    }\n\n    return (\n        <div id=\"padBank\">\n            <Display soundLabel={soundLabel}\n                volume={volume}\n                power={props.power}\n            />\n            {/* return a DrumPad component for each object in soundBank */}\n            <div id=\"pad-div\">\n                {soundBank.map((soundData) => {\n                    return (\n                        <DrumPad\n                            updateDisplay={updateDisplay}\n                            padLabel={soundData.padLabel}\n                            volume={volume}\n                            power={props.power}\n                            id={soundData.id}\n                            key={soundData.id} // unique key attribute for React\n                            url={soundData.url}\n                        />\n                    )\n                })}\n            </div>\n            <Volume volume={volume}\n                handleChange={handleChange}\n                power={props.power}\n            />\n        </div>\n    )\n}\n\nexport default PadBank;","export default function PowerButton(props) {\n    \n    return (\n        <div className=\"powerBtn-div\">\n            <input type=\"button\" \n                   id=\"power\"\n                   onClick={props.powerSwitch} >\n            </input>\n            <label htmlFor=\"power\">power</label>\n        </div>\n    )\n}","export default function Footer() {\n    return (\n        <footer>\n            <p>Marco Costa 2021. The <a href=\"https://github.com/marcocosta1618/drum-machine\"\n                target=\"_blank\" rel=\"noreferrer\">code of this app</a> is hosted at GitHub.</p>\n        </footer>\n    )\n}","import { useEffect, useState } from 'react';\n\nimport PadBank from '../components/PadBank';\nimport PowerButton from '../components/PowerButton';\nimport Footer from '../components/Footer';\nimport soundBank from '../soundData/soundBank';\n\nexport default function DrumMachine() {\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeydown);\n        // cleanup function on unmount:\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, []); // empty dependencies array => run useEffect only after first render\n\n\n    const handleKeydown = function(e) {\n        let clicked = soundBank.find((soundData) => {\n            return soundData.padLabel === e.key.toUpperCase();\n          });\n        clicked !== undefined && document.getElementById(clicked.id).click();\n    }\n\n    const [ power, setPower ] = useState(true);\n    const powerSwitch = function(e) {\n        setPower(!power);\n        e.target.classList.toggle('off');\n    }\n\n    return (\n        <div id=\"drum-machine\" tabIndex=\"-1\" >\n            <h1>Drum Machine</h1>\n            <PadBank  power={power}/>\n            <PowerButton power={power} powerSwitch={powerSwitch} />\n            <Footer />\n        </div>\n    );\n}","import DrumMachine from './containers/DrumMachine';\nimport './style/App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine />\n    </div>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}